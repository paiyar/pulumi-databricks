// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetNotebookPaths
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var prod = Output.Create(Databricks.GetNotebookPaths.InvokeAsync(new Databricks.GetNotebookPathsArgs
        ///         {
        ///             Path = "/Production",
        ///             Recursive = true,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetNotebookPathsResult> InvokeAsync(GetNotebookPathsArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNotebookPathsResult>("databricks:index/getNotebookPaths:getNotebookPaths", args ?? new GetNotebookPathsArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Databricks = Pulumi.Databricks;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var prod = Output.Create(Databricks.GetNotebookPaths.InvokeAsync(new Databricks.GetNotebookPathsArgs
        ///         {
        ///             Path = "/Production",
        ///             Recursive = true,
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetNotebookPathsResult> Invoke(GetNotebookPathsInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNotebookPathsResult>("databricks:index/getNotebookPaths:getNotebookPaths", args ?? new GetNotebookPathsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNotebookPathsArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Path to workspace directory
        /// </summary>
        [Input("path", required: true)]
        public string Path { get; set; } = null!;

        /// <summary>
        /// Either or recursively walk given path
        /// </summary>
        [Input("recursive", required: true)]
        public bool Recursive { get; set; }

        public GetNotebookPathsArgs()
        {
        }
    }

    public sealed class GetNotebookPathsInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Path to workspace directory
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        /// <summary>
        /// Either or recursively walk given path
        /// </summary>
        [Input("recursive", required: true)]
        public Input<bool> Recursive { get; set; } = null!;

        public GetNotebookPathsInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNotebookPathsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// list of objects with `path` and `language` attributes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetNotebookPathsNotebookPathListResult> NotebookPathLists;
        public readonly string Path;
        public readonly bool Recursive;

        [OutputConstructor]
        private GetNotebookPathsResult(
            string id,

            ImmutableArray<Outputs.GetNotebookPathsNotebookPathListResult> notebookPathLists,

            string path,

            bool recursive)
        {
            Id = id;
            NotebookPathLists = notebookPathLists;
            Path = path;
            Recursive = recursive;
        }
    }
}
