// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetSqlWarehouse
    {
        public static Task<GetSqlWarehouseResult> InvokeAsync(GetSqlWarehouseArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSqlWarehouseResult>("databricks:index/getSqlWarehouse:getSqlWarehouse", args ?? new GetSqlWarehouseArgs(), options.WithDefaults());

        public static Output<GetSqlWarehouseResult> Invoke(GetSqlWarehouseInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSqlWarehouseResult>("databricks:index/getSqlWarehouse:getSqlWarehouse", args ?? new GetSqlWarehouseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSqlWarehouseArgs : Pulumi.InvokeArgs
    {
        [Input("autoStopMins")]
        public int? AutoStopMins { get; set; }

        [Input("channel")]
        public Inputs.GetSqlWarehouseChannelArgs? Channel { get; set; }

        [Input("clusterSize")]
        public string? ClusterSize { get; set; }

        [Input("dataSourceId")]
        public string? DataSourceId { get; set; }

        [Input("enablePhoton")]
        public bool? EnablePhoton { get; set; }

        [Input("enableServerlessCompute")]
        public bool? EnableServerlessCompute { get; set; }

        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("instanceProfileArn")]
        public string? InstanceProfileArn { get; set; }

        [Input("jdbcUrl")]
        public string? JdbcUrl { get; set; }

        [Input("maxNumClusters")]
        public int? MaxNumClusters { get; set; }

        [Input("minNumClusters")]
        public int? MinNumClusters { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("numClusters")]
        public int? NumClusters { get; set; }

        [Input("odbcParams")]
        public Inputs.GetSqlWarehouseOdbcParamsArgs? OdbcParams { get; set; }

        [Input("spotInstancePolicy")]
        public string? SpotInstancePolicy { get; set; }

        [Input("state")]
        public string? State { get; set; }

        [Input("tags")]
        public Inputs.GetSqlWarehouseTagsArgs? Tags { get; set; }

        public GetSqlWarehouseArgs()
        {
        }
    }

    public sealed class GetSqlWarehouseInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("autoStopMins")]
        public Input<int>? AutoStopMins { get; set; }

        [Input("channel")]
        public Input<Inputs.GetSqlWarehouseChannelInputArgs>? Channel { get; set; }

        [Input("clusterSize")]
        public Input<string>? ClusterSize { get; set; }

        [Input("dataSourceId")]
        public Input<string>? DataSourceId { get; set; }

        [Input("enablePhoton")]
        public Input<bool>? EnablePhoton { get; set; }

        [Input("enableServerlessCompute")]
        public Input<bool>? EnableServerlessCompute { get; set; }

        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("instanceProfileArn")]
        public Input<string>? InstanceProfileArn { get; set; }

        [Input("jdbcUrl")]
        public Input<string>? JdbcUrl { get; set; }

        [Input("maxNumClusters")]
        public Input<int>? MaxNumClusters { get; set; }

        [Input("minNumClusters")]
        public Input<int>? MinNumClusters { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("numClusters")]
        public Input<int>? NumClusters { get; set; }

        [Input("odbcParams")]
        public Input<Inputs.GetSqlWarehouseOdbcParamsInputArgs>? OdbcParams { get; set; }

        [Input("spotInstancePolicy")]
        public Input<string>? SpotInstancePolicy { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        public Input<Inputs.GetSqlWarehouseTagsInputArgs>? Tags { get; set; }

        public GetSqlWarehouseInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSqlWarehouseResult
    {
        public readonly int AutoStopMins;
        public readonly Outputs.GetSqlWarehouseChannelResult Channel;
        public readonly string ClusterSize;
        public readonly string DataSourceId;
        public readonly bool EnablePhoton;
        public readonly bool EnableServerlessCompute;
        public readonly string Id;
        public readonly string InstanceProfileArn;
        public readonly string JdbcUrl;
        public readonly int MaxNumClusters;
        public readonly int MinNumClusters;
        public readonly string Name;
        public readonly int NumClusters;
        public readonly Outputs.GetSqlWarehouseOdbcParamsResult OdbcParams;
        public readonly string SpotInstancePolicy;
        public readonly string State;
        public readonly Outputs.GetSqlWarehouseTagsResult Tags;

        [OutputConstructor]
        private GetSqlWarehouseResult(
            int autoStopMins,

            Outputs.GetSqlWarehouseChannelResult channel,

            string clusterSize,

            string dataSourceId,

            bool enablePhoton,

            bool enableServerlessCompute,

            string id,

            string instanceProfileArn,

            string jdbcUrl,

            int maxNumClusters,

            int minNumClusters,

            string name,

            int numClusters,

            Outputs.GetSqlWarehouseOdbcParamsResult odbcParams,

            string spotInstancePolicy,

            string state,

            Outputs.GetSqlWarehouseTagsResult tags)
        {
            AutoStopMins = autoStopMins;
            Channel = channel;
            ClusterSize = clusterSize;
            DataSourceId = dataSourceId;
            EnablePhoton = enablePhoton;
            EnableServerlessCompute = enableServerlessCompute;
            Id = id;
            InstanceProfileArn = instanceProfileArn;
            JdbcUrl = jdbcUrl;
            MaxNumClusters = maxNumClusters;
            MinNumClusters = minNumClusters;
            Name = name;
            NumClusters = numClusters;
            OdbcParams = odbcParams;
            SpotInstancePolicy = spotInstancePolicy;
            State = state;
            Tags = tags;
        }
    }
}
