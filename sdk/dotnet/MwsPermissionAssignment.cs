// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    /// <summary>
    /// These resources are invoked in the account context. Provider must have `account_id` attribute configured.
    /// 
    /// ## Example Usage
    /// 
    /// In account context, adding account-level group to a workspace:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var dataEng = new Databricks.Group("dataEng", new Databricks.GroupArgs
    ///         {
    ///             DisplayName = "Data Engineering",
    ///         });
    ///         var addAdminGroup = new Databricks.MwsPermissionAssignment("addAdminGroup", new Databricks.MwsPermissionAssignmentArgs
    ///         {
    ///             WorkspaceId = databricks_mws_workspaces.This.Workspace_id,
    ///             PrincipalId = dataEng.Id,
    ///             Permissions = 
    ///             {
    ///                 "ADMIN",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// In account context, adding account-level user to a workspace:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var me = new Databricks.User("me", new Databricks.UserArgs
    ///         {
    ///             UserName = "me@example.com",
    ///         });
    ///         var addUser = new Databricks.MwsPermissionAssignment("addUser", new Databricks.MwsPermissionAssignmentArgs
    ///         {
    ///             WorkspaceId = databricks_mws_workspaces.This.Workspace_id,
    ///             PrincipalId = me.Id,
    ///             Permissions = 
    ///             {
    ///                 "USER",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// In account context, adding account-level service principal to a workspace:
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Databricks = Pulumi.Databricks;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var sp = new Databricks.ServicePrincipal("sp", new Databricks.ServicePrincipalArgs
    ///         {
    ///             DisplayName = "Automation-only SP",
    ///         });
    ///         var addAdminSpn = new Databricks.MwsPermissionAssignment("addAdminSpn", new Databricks.MwsPermissionAssignmentArgs
    ///         {
    ///             WorkspaceId = databricks_mws_workspaces.This.Workspace_id,
    ///             PrincipalId = sp.Id,
    ///             Permissions = 
    ///             {
    ///                 "ADMIN",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [DatabricksResourceType("databricks:index/mwsPermissionAssignment:MwsPermissionAssignment")]
    public partial class MwsPermissionAssignment : Pulumi.CustomResource
    {
        [Output("permissions")]
        public Output<ImmutableArray<string>> Permissions { get; private set; } = null!;

        [Output("principalId")]
        public Output<int> PrincipalId { get; private set; } = null!;

        [Output("workspaceId")]
        public Output<int> WorkspaceId { get; private set; } = null!;


        /// <summary>
        /// Create a MwsPermissionAssignment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MwsPermissionAssignment(string name, MwsPermissionAssignmentArgs args, CustomResourceOptions? options = null)
            : base("databricks:index/mwsPermissionAssignment:MwsPermissionAssignment", name, args ?? new MwsPermissionAssignmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MwsPermissionAssignment(string name, Input<string> id, MwsPermissionAssignmentState? state = null, CustomResourceOptions? options = null)
            : base("databricks:index/mwsPermissionAssignment:MwsPermissionAssignment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MwsPermissionAssignment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MwsPermissionAssignment Get(string name, Input<string> id, MwsPermissionAssignmentState? state = null, CustomResourceOptions? options = null)
        {
            return new MwsPermissionAssignment(name, id, state, options);
        }
    }

    public sealed class MwsPermissionAssignmentArgs : Pulumi.ResourceArgs
    {
        [Input("permissions", required: true)]
        private InputList<string>? _permissions;
        public InputList<string> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<string>());
            set => _permissions = value;
        }

        [Input("principalId", required: true)]
        public Input<int> PrincipalId { get; set; } = null!;

        [Input("workspaceId", required: true)]
        public Input<int> WorkspaceId { get; set; } = null!;

        public MwsPermissionAssignmentArgs()
        {
        }
    }

    public sealed class MwsPermissionAssignmentState : Pulumi.ResourceArgs
    {
        [Input("permissions")]
        private InputList<string>? _permissions;
        public InputList<string> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<string>());
            set => _permissions = value;
        }

        [Input("principalId")]
        public Input<int>? PrincipalId { get; set; }

        [Input("workspaceId")]
        public Input<int>? WorkspaceId { get; set; }

        public MwsPermissionAssignmentState()
        {
        }
    }
}
