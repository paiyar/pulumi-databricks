// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetNodeType
    {
        public static Task<GetNodeTypeResult> InvokeAsync(GetNodeTypeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetNodeTypeResult>("databricks:index/getNodeType:getNodeType", args ?? new GetNodeTypeArgs(), options.WithDefaults());

        public static Output<GetNodeTypeResult> Invoke(GetNodeTypeInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetNodeTypeResult>("databricks:index/getNodeType:getNodeType", args ?? new GetNodeTypeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNodeTypeArgs : Pulumi.InvokeArgs
    {
        [Input("category")]
        public string? Category { get; set; }

        [Input("gbPerCore")]
        public int? GbPerCore { get; set; }

        [Input("graviton")]
        public bool? Graviton { get; set; }

        [Input("isIoCacheEnabled")]
        public bool? IsIoCacheEnabled { get; set; }

        [Input("localDisk")]
        public bool? LocalDisk { get; set; }

        [Input("minCores")]
        public int? MinCores { get; set; }

        [Input("minGpus")]
        public int? MinGpus { get; set; }

        [Input("minMemoryGb")]
        public int? MinMemoryGb { get; set; }

        [Input("photonDriverCapable")]
        public bool? PhotonDriverCapable { get; set; }

        [Input("photonWorkerCapable")]
        public bool? PhotonWorkerCapable { get; set; }

        [Input("supportPortForwarding")]
        public bool? SupportPortForwarding { get; set; }

        [Input("vcpu")]
        public bool? Vcpu { get; set; }

        public GetNodeTypeArgs()
        {
        }
    }

    public sealed class GetNodeTypeInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("category")]
        public Input<string>? Category { get; set; }

        [Input("gbPerCore")]
        public Input<int>? GbPerCore { get; set; }

        [Input("graviton")]
        public Input<bool>? Graviton { get; set; }

        [Input("isIoCacheEnabled")]
        public Input<bool>? IsIoCacheEnabled { get; set; }

        [Input("localDisk")]
        public Input<bool>? LocalDisk { get; set; }

        [Input("minCores")]
        public Input<int>? MinCores { get; set; }

        [Input("minGpus")]
        public Input<int>? MinGpus { get; set; }

        [Input("minMemoryGb")]
        public Input<int>? MinMemoryGb { get; set; }

        [Input("photonDriverCapable")]
        public Input<bool>? PhotonDriverCapable { get; set; }

        [Input("photonWorkerCapable")]
        public Input<bool>? PhotonWorkerCapable { get; set; }

        [Input("supportPortForwarding")]
        public Input<bool>? SupportPortForwarding { get; set; }

        [Input("vcpu")]
        public Input<bool>? Vcpu { get; set; }

        public GetNodeTypeInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetNodeTypeResult
    {
        public readonly string? Category;
        public readonly int? GbPerCore;
        public readonly bool? Graviton;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsIoCacheEnabled;
        public readonly bool? LocalDisk;
        public readonly int? MinCores;
        public readonly int? MinGpus;
        public readonly int? MinMemoryGb;
        public readonly bool? PhotonDriverCapable;
        public readonly bool? PhotonWorkerCapable;
        public readonly bool? SupportPortForwarding;
        public readonly bool? Vcpu;

        [OutputConstructor]
        private GetNodeTypeResult(
            string? category,

            int? gbPerCore,

            bool? graviton,

            string id,

            bool? isIoCacheEnabled,

            bool? localDisk,

            int? minCores,

            int? minGpus,

            int? minMemoryGb,

            bool? photonDriverCapable,

            bool? photonWorkerCapable,

            bool? supportPortForwarding,

            bool? vcpu)
        {
            Category = category;
            GbPerCore = gbPerCore;
            Graviton = graviton;
            Id = id;
            IsIoCacheEnabled = isIoCacheEnabled;
            LocalDisk = localDisk;
            MinCores = minCores;
            MinGpus = minGpus;
            MinMemoryGb = minMemoryGb;
            PhotonDriverCapable = photonDriverCapable;
            PhotonWorkerCapable = photonWorkerCapable;
            SupportPortForwarding = supportPortForwarding;
            Vcpu = vcpu;
        }
    }
}
