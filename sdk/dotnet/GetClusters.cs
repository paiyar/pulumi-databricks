// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Databricks
{
    public static class GetClusters
    {
        public static Task<GetClustersResult> InvokeAsync(GetClustersArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClustersResult>("databricks:index/getClusters:getClusters", args ?? new GetClustersArgs(), options.WithDefaults());

        public static Output<GetClustersResult> Invoke(GetClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetClustersResult>("databricks:index/getClusters:getClusters", args ?? new GetClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClustersArgs : Pulumi.InvokeArgs
    {
        [Input("clusterNameContains")]
        public string? ClusterNameContains { get; set; }

        public GetClustersArgs()
        {
        }
    }

    public sealed class GetClustersInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("clusterNameContains")]
        public Input<string>? ClusterNameContains { get; set; }

        public GetClustersInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetClustersResult
    {
        public readonly string? ClusterNameContains;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;

        [OutputConstructor]
        private GetClustersResult(
            string? clusterNameContains,

            string id,

            ImmutableArray<string> ids)
        {
            ClusterNameContains = clusterNameContains;
            Id = id;
            Ids = ids;
        }
    }
}
