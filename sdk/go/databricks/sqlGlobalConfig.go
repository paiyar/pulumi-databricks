// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SqlGlobalConfig struct {
	pulumi.CustomResourceState

	DataAccessConfig        pulumi.MapOutput       `pulumi:"dataAccessConfig"`
	EnableServerlessCompute pulumi.BoolPtrOutput   `pulumi:"enableServerlessCompute"`
	InstanceProfileArn      pulumi.StringPtrOutput `pulumi:"instanceProfileArn"`
	SecurityPolicy          pulumi.StringPtrOutput `pulumi:"securityPolicy"`
	SqlConfigParams         pulumi.MapOutput       `pulumi:"sqlConfigParams"`
}

// NewSqlGlobalConfig registers a new resource with the given unique name, arguments, and options.
func NewSqlGlobalConfig(ctx *pulumi.Context,
	name string, args *SqlGlobalConfigArgs, opts ...pulumi.ResourceOption) (*SqlGlobalConfig, error) {
	if args == nil {
		args = &SqlGlobalConfigArgs{}
	}

	var resource SqlGlobalConfig
	err := ctx.RegisterResource("databricks:index/sqlGlobalConfig:SqlGlobalConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSqlGlobalConfig gets an existing SqlGlobalConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSqlGlobalConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SqlGlobalConfigState, opts ...pulumi.ResourceOption) (*SqlGlobalConfig, error) {
	var resource SqlGlobalConfig
	err := ctx.ReadResource("databricks:index/sqlGlobalConfig:SqlGlobalConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SqlGlobalConfig resources.
type sqlGlobalConfigState struct {
	DataAccessConfig        map[string]interface{} `pulumi:"dataAccessConfig"`
	EnableServerlessCompute *bool                  `pulumi:"enableServerlessCompute"`
	InstanceProfileArn      *string                `pulumi:"instanceProfileArn"`
	SecurityPolicy          *string                `pulumi:"securityPolicy"`
	SqlConfigParams         map[string]interface{} `pulumi:"sqlConfigParams"`
}

type SqlGlobalConfigState struct {
	DataAccessConfig        pulumi.MapInput
	EnableServerlessCompute pulumi.BoolPtrInput
	InstanceProfileArn      pulumi.StringPtrInput
	SecurityPolicy          pulumi.StringPtrInput
	SqlConfigParams         pulumi.MapInput
}

func (SqlGlobalConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlGlobalConfigState)(nil)).Elem()
}

type sqlGlobalConfigArgs struct {
	DataAccessConfig        map[string]interface{} `pulumi:"dataAccessConfig"`
	EnableServerlessCompute *bool                  `pulumi:"enableServerlessCompute"`
	InstanceProfileArn      *string                `pulumi:"instanceProfileArn"`
	SecurityPolicy          *string                `pulumi:"securityPolicy"`
	SqlConfigParams         map[string]interface{} `pulumi:"sqlConfigParams"`
}

// The set of arguments for constructing a SqlGlobalConfig resource.
type SqlGlobalConfigArgs struct {
	DataAccessConfig        pulumi.MapInput
	EnableServerlessCompute pulumi.BoolPtrInput
	InstanceProfileArn      pulumi.StringPtrInput
	SecurityPolicy          pulumi.StringPtrInput
	SqlConfigParams         pulumi.MapInput
}

func (SqlGlobalConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sqlGlobalConfigArgs)(nil)).Elem()
}

type SqlGlobalConfigInput interface {
	pulumi.Input

	ToSqlGlobalConfigOutput() SqlGlobalConfigOutput
	ToSqlGlobalConfigOutputWithContext(ctx context.Context) SqlGlobalConfigOutput
}

func (*SqlGlobalConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlGlobalConfig)(nil)).Elem()
}

func (i *SqlGlobalConfig) ToSqlGlobalConfigOutput() SqlGlobalConfigOutput {
	return i.ToSqlGlobalConfigOutputWithContext(context.Background())
}

func (i *SqlGlobalConfig) ToSqlGlobalConfigOutputWithContext(ctx context.Context) SqlGlobalConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlGlobalConfigOutput)
}

// SqlGlobalConfigArrayInput is an input type that accepts SqlGlobalConfigArray and SqlGlobalConfigArrayOutput values.
// You can construct a concrete instance of `SqlGlobalConfigArrayInput` via:
//
//          SqlGlobalConfigArray{ SqlGlobalConfigArgs{...} }
type SqlGlobalConfigArrayInput interface {
	pulumi.Input

	ToSqlGlobalConfigArrayOutput() SqlGlobalConfigArrayOutput
	ToSqlGlobalConfigArrayOutputWithContext(context.Context) SqlGlobalConfigArrayOutput
}

type SqlGlobalConfigArray []SqlGlobalConfigInput

func (SqlGlobalConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SqlGlobalConfig)(nil)).Elem()
}

func (i SqlGlobalConfigArray) ToSqlGlobalConfigArrayOutput() SqlGlobalConfigArrayOutput {
	return i.ToSqlGlobalConfigArrayOutputWithContext(context.Background())
}

func (i SqlGlobalConfigArray) ToSqlGlobalConfigArrayOutputWithContext(ctx context.Context) SqlGlobalConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlGlobalConfigArrayOutput)
}

// SqlGlobalConfigMapInput is an input type that accepts SqlGlobalConfigMap and SqlGlobalConfigMapOutput values.
// You can construct a concrete instance of `SqlGlobalConfigMapInput` via:
//
//          SqlGlobalConfigMap{ "key": SqlGlobalConfigArgs{...} }
type SqlGlobalConfigMapInput interface {
	pulumi.Input

	ToSqlGlobalConfigMapOutput() SqlGlobalConfigMapOutput
	ToSqlGlobalConfigMapOutputWithContext(context.Context) SqlGlobalConfigMapOutput
}

type SqlGlobalConfigMap map[string]SqlGlobalConfigInput

func (SqlGlobalConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SqlGlobalConfig)(nil)).Elem()
}

func (i SqlGlobalConfigMap) ToSqlGlobalConfigMapOutput() SqlGlobalConfigMapOutput {
	return i.ToSqlGlobalConfigMapOutputWithContext(context.Background())
}

func (i SqlGlobalConfigMap) ToSqlGlobalConfigMapOutputWithContext(ctx context.Context) SqlGlobalConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SqlGlobalConfigMapOutput)
}

type SqlGlobalConfigOutput struct{ *pulumi.OutputState }

func (SqlGlobalConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SqlGlobalConfig)(nil)).Elem()
}

func (o SqlGlobalConfigOutput) ToSqlGlobalConfigOutput() SqlGlobalConfigOutput {
	return o
}

func (o SqlGlobalConfigOutput) ToSqlGlobalConfigOutputWithContext(ctx context.Context) SqlGlobalConfigOutput {
	return o
}

type SqlGlobalConfigArrayOutput struct{ *pulumi.OutputState }

func (SqlGlobalConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SqlGlobalConfig)(nil)).Elem()
}

func (o SqlGlobalConfigArrayOutput) ToSqlGlobalConfigArrayOutput() SqlGlobalConfigArrayOutput {
	return o
}

func (o SqlGlobalConfigArrayOutput) ToSqlGlobalConfigArrayOutputWithContext(ctx context.Context) SqlGlobalConfigArrayOutput {
	return o
}

func (o SqlGlobalConfigArrayOutput) Index(i pulumi.IntInput) SqlGlobalConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SqlGlobalConfig {
		return vs[0].([]*SqlGlobalConfig)[vs[1].(int)]
	}).(SqlGlobalConfigOutput)
}

type SqlGlobalConfigMapOutput struct{ *pulumi.OutputState }

func (SqlGlobalConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SqlGlobalConfig)(nil)).Elem()
}

func (o SqlGlobalConfigMapOutput) ToSqlGlobalConfigMapOutput() SqlGlobalConfigMapOutput {
	return o
}

func (o SqlGlobalConfigMapOutput) ToSqlGlobalConfigMapOutputWithContext(ctx context.Context) SqlGlobalConfigMapOutput {
	return o
}

func (o SqlGlobalConfigMapOutput) MapIndex(k pulumi.StringInput) SqlGlobalConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SqlGlobalConfig {
		return vs[0].(map[string]*SqlGlobalConfig)[vs[1].(string)]
	}).(SqlGlobalConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SqlGlobalConfigInput)(nil)).Elem(), &SqlGlobalConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlGlobalConfigArrayInput)(nil)).Elem(), SqlGlobalConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SqlGlobalConfigMapInput)(nil)).Elem(), SqlGlobalConfigMap{})
	pulumi.RegisterOutputType(SqlGlobalConfigOutput{})
	pulumi.RegisterOutputType(SqlGlobalConfigArrayOutput{})
	pulumi.RegisterOutputType(SqlGlobalConfigMapOutput{})
}
