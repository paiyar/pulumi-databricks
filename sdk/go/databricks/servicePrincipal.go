// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ServicePrincipal struct {
	pulumi.CustomResourceState

	Active                  pulumi.BoolPtrOutput   `pulumi:"active"`
	AllowClusterCreate      pulumi.BoolPtrOutput   `pulumi:"allowClusterCreate"`
	AllowInstancePoolCreate pulumi.BoolPtrOutput   `pulumi:"allowInstancePoolCreate"`
	ApplicationId           pulumi.StringOutput    `pulumi:"applicationId"`
	DatabricksSqlAccess     pulumi.BoolPtrOutput   `pulumi:"databricksSqlAccess"`
	DisplayName             pulumi.StringOutput    `pulumi:"displayName"`
	ExternalId              pulumi.StringPtrOutput `pulumi:"externalId"`
	Force                   pulumi.BoolPtrOutput   `pulumi:"force"`
	WorkspaceAccess         pulumi.BoolPtrOutput   `pulumi:"workspaceAccess"`
}

// NewServicePrincipal registers a new resource with the given unique name, arguments, and options.
func NewServicePrincipal(ctx *pulumi.Context,
	name string, args *ServicePrincipalArgs, opts ...pulumi.ResourceOption) (*ServicePrincipal, error) {
	if args == nil {
		args = &ServicePrincipalArgs{}
	}

	var resource ServicePrincipal
	err := ctx.RegisterResource("databricks:index/servicePrincipal:ServicePrincipal", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServicePrincipal gets an existing ServicePrincipal resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServicePrincipal(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServicePrincipalState, opts ...pulumi.ResourceOption) (*ServicePrincipal, error) {
	var resource ServicePrincipal
	err := ctx.ReadResource("databricks:index/servicePrincipal:ServicePrincipal", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServicePrincipal resources.
type servicePrincipalState struct {
	Active                  *bool   `pulumi:"active"`
	AllowClusterCreate      *bool   `pulumi:"allowClusterCreate"`
	AllowInstancePoolCreate *bool   `pulumi:"allowInstancePoolCreate"`
	ApplicationId           *string `pulumi:"applicationId"`
	DatabricksSqlAccess     *bool   `pulumi:"databricksSqlAccess"`
	DisplayName             *string `pulumi:"displayName"`
	ExternalId              *string `pulumi:"externalId"`
	Force                   *bool   `pulumi:"force"`
	WorkspaceAccess         *bool   `pulumi:"workspaceAccess"`
}

type ServicePrincipalState struct {
	Active                  pulumi.BoolPtrInput
	AllowClusterCreate      pulumi.BoolPtrInput
	AllowInstancePoolCreate pulumi.BoolPtrInput
	ApplicationId           pulumi.StringPtrInput
	DatabricksSqlAccess     pulumi.BoolPtrInput
	DisplayName             pulumi.StringPtrInput
	ExternalId              pulumi.StringPtrInput
	Force                   pulumi.BoolPtrInput
	WorkspaceAccess         pulumi.BoolPtrInput
}

func (ServicePrincipalState) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePrincipalState)(nil)).Elem()
}

type servicePrincipalArgs struct {
	Active                  *bool   `pulumi:"active"`
	AllowClusterCreate      *bool   `pulumi:"allowClusterCreate"`
	AllowInstancePoolCreate *bool   `pulumi:"allowInstancePoolCreate"`
	ApplicationId           *string `pulumi:"applicationId"`
	DatabricksSqlAccess     *bool   `pulumi:"databricksSqlAccess"`
	DisplayName             *string `pulumi:"displayName"`
	ExternalId              *string `pulumi:"externalId"`
	Force                   *bool   `pulumi:"force"`
	WorkspaceAccess         *bool   `pulumi:"workspaceAccess"`
}

// The set of arguments for constructing a ServicePrincipal resource.
type ServicePrincipalArgs struct {
	Active                  pulumi.BoolPtrInput
	AllowClusterCreate      pulumi.BoolPtrInput
	AllowInstancePoolCreate pulumi.BoolPtrInput
	ApplicationId           pulumi.StringPtrInput
	DatabricksSqlAccess     pulumi.BoolPtrInput
	DisplayName             pulumi.StringPtrInput
	ExternalId              pulumi.StringPtrInput
	Force                   pulumi.BoolPtrInput
	WorkspaceAccess         pulumi.BoolPtrInput
}

func (ServicePrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*servicePrincipalArgs)(nil)).Elem()
}

type ServicePrincipalInput interface {
	pulumi.Input

	ToServicePrincipalOutput() ServicePrincipalOutput
	ToServicePrincipalOutputWithContext(ctx context.Context) ServicePrincipalOutput
}

func (*ServicePrincipal) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipal)(nil)).Elem()
}

func (i *ServicePrincipal) ToServicePrincipalOutput() ServicePrincipalOutput {
	return i.ToServicePrincipalOutputWithContext(context.Background())
}

func (i *ServicePrincipal) ToServicePrincipalOutputWithContext(ctx context.Context) ServicePrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalOutput)
}

// ServicePrincipalArrayInput is an input type that accepts ServicePrincipalArray and ServicePrincipalArrayOutput values.
// You can construct a concrete instance of `ServicePrincipalArrayInput` via:
//
//          ServicePrincipalArray{ ServicePrincipalArgs{...} }
type ServicePrincipalArrayInput interface {
	pulumi.Input

	ToServicePrincipalArrayOutput() ServicePrincipalArrayOutput
	ToServicePrincipalArrayOutputWithContext(context.Context) ServicePrincipalArrayOutput
}

type ServicePrincipalArray []ServicePrincipalInput

func (ServicePrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePrincipal)(nil)).Elem()
}

func (i ServicePrincipalArray) ToServicePrincipalArrayOutput() ServicePrincipalArrayOutput {
	return i.ToServicePrincipalArrayOutputWithContext(context.Background())
}

func (i ServicePrincipalArray) ToServicePrincipalArrayOutputWithContext(ctx context.Context) ServicePrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalArrayOutput)
}

// ServicePrincipalMapInput is an input type that accepts ServicePrincipalMap and ServicePrincipalMapOutput values.
// You can construct a concrete instance of `ServicePrincipalMapInput` via:
//
//          ServicePrincipalMap{ "key": ServicePrincipalArgs{...} }
type ServicePrincipalMapInput interface {
	pulumi.Input

	ToServicePrincipalMapOutput() ServicePrincipalMapOutput
	ToServicePrincipalMapOutputWithContext(context.Context) ServicePrincipalMapOutput
}

type ServicePrincipalMap map[string]ServicePrincipalInput

func (ServicePrincipalMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePrincipal)(nil)).Elem()
}

func (i ServicePrincipalMap) ToServicePrincipalMapOutput() ServicePrincipalMapOutput {
	return i.ToServicePrincipalMapOutputWithContext(context.Background())
}

func (i ServicePrincipalMap) ToServicePrincipalMapOutputWithContext(ctx context.Context) ServicePrincipalMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePrincipalMapOutput)
}

type ServicePrincipalOutput struct{ *pulumi.OutputState }

func (ServicePrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServicePrincipal)(nil)).Elem()
}

func (o ServicePrincipalOutput) ToServicePrincipalOutput() ServicePrincipalOutput {
	return o
}

func (o ServicePrincipalOutput) ToServicePrincipalOutputWithContext(ctx context.Context) ServicePrincipalOutput {
	return o
}

type ServicePrincipalArrayOutput struct{ *pulumi.OutputState }

func (ServicePrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServicePrincipal)(nil)).Elem()
}

func (o ServicePrincipalArrayOutput) ToServicePrincipalArrayOutput() ServicePrincipalArrayOutput {
	return o
}

func (o ServicePrincipalArrayOutput) ToServicePrincipalArrayOutputWithContext(ctx context.Context) ServicePrincipalArrayOutput {
	return o
}

func (o ServicePrincipalArrayOutput) Index(i pulumi.IntInput) ServicePrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServicePrincipal {
		return vs[0].([]*ServicePrincipal)[vs[1].(int)]
	}).(ServicePrincipalOutput)
}

type ServicePrincipalMapOutput struct{ *pulumi.OutputState }

func (ServicePrincipalMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServicePrincipal)(nil)).Elem()
}

func (o ServicePrincipalMapOutput) ToServicePrincipalMapOutput() ServicePrincipalMapOutput {
	return o
}

func (o ServicePrincipalMapOutput) ToServicePrincipalMapOutputWithContext(ctx context.Context) ServicePrincipalMapOutput {
	return o
}

func (o ServicePrincipalMapOutput) MapIndex(k pulumi.StringInput) ServicePrincipalOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServicePrincipal {
		return vs[0].(map[string]*ServicePrincipal)[vs[1].(string)]
	}).(ServicePrincipalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalInput)(nil)).Elem(), &ServicePrincipal{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalArrayInput)(nil)).Elem(), ServicePrincipalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServicePrincipalMapInput)(nil)).Elem(), ServicePrincipalMap{})
	pulumi.RegisterOutputType(ServicePrincipalOutput{})
	pulumi.RegisterOutputType(ServicePrincipalArrayOutput{})
	pulumi.RegisterOutputType(ServicePrincipalMapOutput{})
}
