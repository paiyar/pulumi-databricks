// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAwsCrossaccountPolicy(ctx *pulumi.Context, args *GetAwsCrossaccountPolicyArgs, opts ...pulumi.InvokeOption) (*GetAwsCrossaccountPolicyResult, error) {
	var rv GetAwsCrossaccountPolicyResult
	err := ctx.Invoke("databricks:index/getAwsCrossaccountPolicy:getAwsCrossaccountPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAwsCrossaccountPolicy.
type GetAwsCrossaccountPolicyArgs struct {
	PassRoles []string `pulumi:"passRoles"`
}

// A collection of values returned by getAwsCrossaccountPolicy.
type GetAwsCrossaccountPolicyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string   `pulumi:"id"`
	Json      string   `pulumi:"json"`
	PassRoles []string `pulumi:"passRoles"`
}

func GetAwsCrossaccountPolicyOutput(ctx *pulumi.Context, args GetAwsCrossaccountPolicyOutputArgs, opts ...pulumi.InvokeOption) GetAwsCrossaccountPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAwsCrossaccountPolicyResult, error) {
			args := v.(GetAwsCrossaccountPolicyArgs)
			r, err := GetAwsCrossaccountPolicy(ctx, &args, opts...)
			return *r, err
		}).(GetAwsCrossaccountPolicyResultOutput)
}

// A collection of arguments for invoking getAwsCrossaccountPolicy.
type GetAwsCrossaccountPolicyOutputArgs struct {
	PassRoles pulumi.StringArrayInput `pulumi:"passRoles"`
}

func (GetAwsCrossaccountPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCrossaccountPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getAwsCrossaccountPolicy.
type GetAwsCrossaccountPolicyResultOutput struct{ *pulumi.OutputState }

func (GetAwsCrossaccountPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAwsCrossaccountPolicyResult)(nil)).Elem()
}

func (o GetAwsCrossaccountPolicyResultOutput) ToGetAwsCrossaccountPolicyResultOutput() GetAwsCrossaccountPolicyResultOutput {
	return o
}

func (o GetAwsCrossaccountPolicyResultOutput) ToGetAwsCrossaccountPolicyResultOutputWithContext(ctx context.Context) GetAwsCrossaccountPolicyResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetAwsCrossaccountPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCrossaccountPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAwsCrossaccountPolicyResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAwsCrossaccountPolicyResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetAwsCrossaccountPolicyResultOutput) PassRoles() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAwsCrossaccountPolicyResult) []string { return v.PassRoles }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAwsCrossaccountPolicyResultOutput{})
}
