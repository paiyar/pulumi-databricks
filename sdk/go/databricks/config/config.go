// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
)

func GetAccountId(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "databricks:accountId")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "DATABRICKS_ACCOUNT_ID").(string)
}
func GetAuthType(ctx *pulumi.Context) string {
	return config.Get(ctx, "databricks:authType")
}
func GetAzureClientId(ctx *pulumi.Context) string {
	return config.Get(ctx, "databricks:azureClientId")
}
func GetAzureClientSecret(ctx *pulumi.Context) string {
	return config.Get(ctx, "databricks:azureClientSecret")
}
func GetAzureEnvironment(ctx *pulumi.Context) string {
	return config.Get(ctx, "databricks:azureEnvironment")
}
func GetAzureTenantId(ctx *pulumi.Context) string {
	return config.Get(ctx, "databricks:azureTenantId")
}
func GetAzureUseMsi(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "databricks:azureUseMsi")
}
func GetAzureWorkspaceResourceId(ctx *pulumi.Context) string {
	return config.Get(ctx, "databricks:azureWorkspaceResourceId")
}
func GetConfigFile(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "databricks:configFile")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "DATABRICKS_CONFIG_FILE").(string)
}
func GetDebugHeaders(ctx *pulumi.Context) bool {
	v, err := config.TryBool(ctx, "databricks:debugHeaders")
	if err == nil {
		return v
	}
	return getEnvOrDefault(false, parseEnvBool, "DATABRICKS_DEBUG_HEADERS").(bool)
}
func GetDebugTruncateBytes(ctx *pulumi.Context) int {
	v, err := config.TryInt(ctx, "databricks:debugTruncateBytes")
	if err == nil {
		return v
	}
	return getEnvOrDefault(0, parseEnvInt, "DATABRICKS_DEBUG_TRUNCATE_BYTES").(int)
}
func GetGoogleServiceAccount(ctx *pulumi.Context) string {
	return config.Get(ctx, "databricks:googleServiceAccount")
}
func GetHost(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "databricks:host")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "DATABRICKS_HOST").(string)
}
func GetHttpTimeoutSeconds(ctx *pulumi.Context) int {
	return config.GetInt(ctx, "databricks:httpTimeoutSeconds")
}
func GetPassword(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "databricks:password")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "DATABRICKS_PASSWORD").(string)
}
func GetProfile(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "databricks:profile")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "DATABRICKS_PROFILE").(string)
}
func GetRateLimit(ctx *pulumi.Context) int {
	v, err := config.TryInt(ctx, "databricks:rateLimit")
	if err == nil {
		return v
	}
	return getEnvOrDefault(0, parseEnvInt, "DATABRICKS_RATE_LIMIT").(int)
}
func GetSkipVerify(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "databricks:skipVerify")
}
func GetToken(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "databricks:token")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "DATABRICKS_TOKEN").(string)
}
func GetUsername(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "databricks:username")
	if err == nil {
		return v
	}
	return getEnvOrDefault("", nil, "DATABRICKS_USERNAME").(string)
}
