// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package databricks

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDbfsFile(ctx *pulumi.Context, args *LookupDbfsFileArgs, opts ...pulumi.InvokeOption) (*LookupDbfsFileResult, error) {
	var rv LookupDbfsFileResult
	err := ctx.Invoke("databricks:index/getDbfsFile:getDbfsFile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbfsFile.
type LookupDbfsFileArgs struct {
	// Do lot load content for files smaller than this in bytes
	LimitFileSize bool `pulumi:"limitFileSize"`
	// Path on DBFS for the file to get content of
	Path string `pulumi:"path"`
}

// A collection of values returned by getDbfsFile.
type LookupDbfsFileResult struct {
	// base64-encoded file contents
	Content string `pulumi:"content"`
	// size of the file in bytes
	FileSize int `pulumi:"fileSize"`
	// The provider-assigned unique ID for this managed resource.
	Id            string `pulumi:"id"`
	LimitFileSize bool   `pulumi:"limitFileSize"`
	Path          string `pulumi:"path"`
}

func LookupDbfsFileOutput(ctx *pulumi.Context, args LookupDbfsFileOutputArgs, opts ...pulumi.InvokeOption) LookupDbfsFileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDbfsFileResult, error) {
			args := v.(LookupDbfsFileArgs)
			r, err := LookupDbfsFile(ctx, &args, opts...)
			return *r, err
		}).(LookupDbfsFileResultOutput)
}

// A collection of arguments for invoking getDbfsFile.
type LookupDbfsFileOutputArgs struct {
	// Do lot load content for files smaller than this in bytes
	LimitFileSize pulumi.BoolInput `pulumi:"limitFileSize"`
	// Path on DBFS for the file to get content of
	Path pulumi.StringInput `pulumi:"path"`
}

func (LookupDbfsFileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbfsFileArgs)(nil)).Elem()
}

// A collection of values returned by getDbfsFile.
type LookupDbfsFileResultOutput struct{ *pulumi.OutputState }

func (LookupDbfsFileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDbfsFileResult)(nil)).Elem()
}

func (o LookupDbfsFileResultOutput) ToLookupDbfsFileResultOutput() LookupDbfsFileResultOutput {
	return o
}

func (o LookupDbfsFileResultOutput) ToLookupDbfsFileResultOutputWithContext(ctx context.Context) LookupDbfsFileResultOutput {
	return o
}

// base64-encoded file contents
func (o LookupDbfsFileResultOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbfsFileResult) string { return v.Content }).(pulumi.StringOutput)
}

// size of the file in bytes
func (o LookupDbfsFileResultOutput) FileSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupDbfsFileResult) int { return v.FileSize }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDbfsFileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbfsFileResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDbfsFileResultOutput) LimitFileSize() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDbfsFileResult) bool { return v.LimitFileSize }).(pulumi.BoolOutput)
}

func (o LookupDbfsFileResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDbfsFileResult) string { return v.Path }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDbfsFileResultOutput{})
}
