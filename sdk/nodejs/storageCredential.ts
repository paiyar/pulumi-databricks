// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

export class StorageCredential extends pulumi.CustomResource {
    /**
     * Get an existing StorageCredential resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StorageCredentialState, opts?: pulumi.CustomResourceOptions): StorageCredential {
        return new StorageCredential(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'databricks:index/storageCredential:StorageCredential';

    /**
     * Returns true if the given object is an instance of StorageCredential.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StorageCredential {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StorageCredential.__pulumiType;
    }

    public readonly awsIamRole!: pulumi.Output<outputs.StorageCredentialAwsIamRole | undefined>;
    public readonly azureManagedIdentity!: pulumi.Output<outputs.StorageCredentialAzureManagedIdentity | undefined>;
    public readonly azureServicePrincipal!: pulumi.Output<outputs.StorageCredentialAzureServicePrincipal | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly metastoreId!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    public readonly owner!: pulumi.Output<string>;

    /**
     * Create a StorageCredential resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: StorageCredentialArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StorageCredentialArgs | StorageCredentialState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StorageCredentialState | undefined;
            resourceInputs["awsIamRole"] = state ? state.awsIamRole : undefined;
            resourceInputs["azureManagedIdentity"] = state ? state.azureManagedIdentity : undefined;
            resourceInputs["azureServicePrincipal"] = state ? state.azureServicePrincipal : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["metastoreId"] = state ? state.metastoreId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["owner"] = state ? state.owner : undefined;
        } else {
            const args = argsOrState as StorageCredentialArgs | undefined;
            resourceInputs["awsIamRole"] = args ? args.awsIamRole : undefined;
            resourceInputs["azureManagedIdentity"] = args ? args.azureManagedIdentity : undefined;
            resourceInputs["azureServicePrincipal"] = args ? args.azureServicePrincipal : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["metastoreId"] = args ? args.metastoreId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["owner"] = args ? args.owner : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StorageCredential.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StorageCredential resources.
 */
export interface StorageCredentialState {
    awsIamRole?: pulumi.Input<inputs.StorageCredentialAwsIamRole>;
    azureManagedIdentity?: pulumi.Input<inputs.StorageCredentialAzureManagedIdentity>;
    azureServicePrincipal?: pulumi.Input<inputs.StorageCredentialAzureServicePrincipal>;
    comment?: pulumi.Input<string>;
    metastoreId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StorageCredential resource.
 */
export interface StorageCredentialArgs {
    awsIamRole?: pulumi.Input<inputs.StorageCredentialAwsIamRole>;
    azureManagedIdentity?: pulumi.Input<inputs.StorageCredentialAzureManagedIdentity>;
    azureServicePrincipal?: pulumi.Input<inputs.StorageCredentialAzureServicePrincipal>;
    comment?: pulumi.Input<string>;
    metastoreId?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    owner?: pulumi.Input<string>;
}
