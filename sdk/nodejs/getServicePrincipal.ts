// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getServicePrincipal(args?: GetServicePrincipalArgs, opts?: pulumi.InvokeOptions): Promise<GetServicePrincipalResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("databricks:index/getServicePrincipal:getServicePrincipal", {
        "active": args.active,
        "applicationId": args.applicationId,
        "displayName": args.displayName,
        "externalId": args.externalId,
        "home": args.home,
        "repos": args.repos,
        "spId": args.spId,
    }, opts);
}

/**
 * A collection of arguments for invoking getServicePrincipal.
 */
export interface GetServicePrincipalArgs {
    active?: boolean;
    applicationId?: string;
    displayName?: string;
    externalId?: string;
    home?: string;
    repos?: string;
    spId?: string;
}

/**
 * A collection of values returned by getServicePrincipal.
 */
export interface GetServicePrincipalResult {
    readonly active: boolean;
    readonly applicationId: string;
    readonly displayName: string;
    readonly externalId: string;
    readonly home: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly repos: string;
    readonly spId: string;
}

export function getServicePrincipalOutput(args?: GetServicePrincipalOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetServicePrincipalResult> {
    return pulumi.output(args).apply(a => getServicePrincipal(a, opts))
}

/**
 * A collection of arguments for invoking getServicePrincipal.
 */
export interface GetServicePrincipalOutputArgs {
    active?: pulumi.Input<boolean>;
    applicationId?: pulumi.Input<string>;
    displayName?: pulumi.Input<string>;
    externalId?: pulumi.Input<string>;
    home?: pulumi.Input<string>;
    repos?: pulumi.Input<string>;
    spId?: pulumi.Input<string>;
}
