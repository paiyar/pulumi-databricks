// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAwsBucketPolicy(args: GetAwsBucketPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAwsBucketPolicyResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("databricks:index/getAwsBucketPolicy:getAwsBucketPolicy", {
        "bucket": args.bucket,
        "databricksAccountId": args.databricksAccountId,
        "fullAccessRole": args.fullAccessRole,
    }, opts);
}

/**
 * A collection of arguments for invoking getAwsBucketPolicy.
 */
export interface GetAwsBucketPolicyArgs {
    bucket: string;
    databricksAccountId?: string;
    fullAccessRole?: string;
}

/**
 * A collection of values returned by getAwsBucketPolicy.
 */
export interface GetAwsBucketPolicyResult {
    readonly bucket: string;
    readonly databricksAccountId?: string;
    readonly fullAccessRole?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly json: string;
}

export function getAwsBucketPolicyOutput(args: GetAwsBucketPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAwsBucketPolicyResult> {
    return pulumi.output(args).apply(a => getAwsBucketPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getAwsBucketPolicy.
 */
export interface GetAwsBucketPolicyOutputArgs {
    bucket: pulumi.Input<string>;
    databricksAccountId?: pulumi.Input<string>;
    fullAccessRole?: pulumi.Input<string>;
}
